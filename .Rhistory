pollutantmean <- function(directory, pollutant, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in id) {
dat <- rbind(dat, read.csv(files_full[i]))
}
mean(dat[, pollutant], na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in id) {
dat <- rbind(dat, read.csv(files_full[i]))
}
mean(dat[, pollutant], na.rm = TRUE)
}
pollutantmean("Users/sayakray/Desktop/Coursera/specdata","sulfate")
pollutantmean("Users/sayakray/Desktop/Coursera/specdata","sulfate")
setwd("Users/sayakray/Downloads/specdata")
getwd()
setwd("Users/sayakray/Downloads/specdata")
getwd()
dir.create("Users/sayakray/Downloads/specdata")
setwd("Users/sayakray/Desktop/Coursera/specdata")
files<-list.files("specdata",full.names=TRUE)
dat<-NULL
for(i in 1:332){
dat<-rbind(dat,read.csv(files[i]))
}
files<-list.files("specdata",full.names=TRUE)
for(i in 1:332){
dat<-rbind(dat,read.csv(files[i]))
}
for(i in 1:332){
dat<-rbind(dat,read.csv(files[i]))
}
files<-list.files("specdata",full.names=TRUE)
dat<-NULL
for(i in 1:332){
dat<-rbind(dat,read.csv(files[i]))
}
pollutantmean<-function(directory,pollutant,id=1:332){
path=directory
filelist=list.files(path)
file.names=as.numeric(sub("\\.csv$","",filelist))
selected.files=filelist[match(id,file.names)]
Data=lapply(file.path(path,selected.files),read.csv)
Data=do.call(rbind.data.frame,Data)
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean('specdata','nitrate',1:10)
pollutantmean('specdata','sulfate',1:10)
pollutantmean('specdata','nitrate',70:72)
pollutantmean('specdata','sulfate',34)
pollutantmean('specdata','nitrate')
complete<-function(directory,id=1:332){
allfiles<-list.files(path=directory,full.names=TRUE)
selecteddata<-data.frame()
completecases<-data.frame()
nobs<-data.frame()
for(i in id){
selecteddata<-read.csv(allfiles[i],header=TRUE)
nobs<-sum(complete.cases(selecteddata))
completecases<-rbind(completecases,data.frame(i,nobs))
}
completecases
}
complete('specdata',1)
complete('specdata',c(2,4,8,10,12))
complete('specdata',30:25)
complete('specdata',3)
cc<-complete('specdata', c(6,10,20,34,100,200,310))
print(cc$nobs)
cc<-complete('specdata', 54)
print(cc$nobs)
set.seed(42)
cc<-complete('specdata', 332:1)
use<-sample(332,10)
print(cc[use,"nobs"])
corr<-function(directory,threshold=0){
source("complete.R")
completecases<-complete(directory)
casesabovethreshold<-completecases[completecases$nobs>threshold,1]
allfiles<-list.files(path=directory,full.names=TRUE)
correlations<-rep(NA,length(casesabovethreshold))
for(i in casesabovethreshold){
filedata<-read.csv(allfiles[i])
completecases<-complete.cases(filedata)
validsulfatedata<-filedata[completecases,2]
validnitratedata<-filedata[completecases,3]
correlation[i]<-cor(x=validsulfatedata,y=validnitratedata)
}
correlations<-correlations[complete.cases(correlations)]
}
cr<-corr('specdata',150)
cr<-corr('specdata',150)
corr<-function(directory,threshold=0){
source("complete.R")
completecases<-complete(directory)
casesabovethreshold<-completecases[completecases$nobs>threshold,1]
allfiles<-list.files(path=directory,full.names=TRUE)
correlations<-rep(NA,length(casesabovethreshold))
for(i in casesabovethreshold){
filedata<-read.csv(allfiles[i])
completecases<-complete.cases(filedata)
validsulfatedata<-filedata[completecases,2]
validnitratedata<-filedata[completecases,3]
correlations[i]<-cor(x=validsulfatedata,y=validnitratedata)
}
correlations<-correlations[complete.cases(correlations)]
}
cr<-corr('specdata',150)
head(cr)
summary(cr)
cr<-corr('specdata',400)
head(cr)
summary(cr)
cr<-corr('specdata',5000)
summary(cr)
length(cr)
cr<-corr('specdata')
summary(cr)
length(cr)
cr<-sort(cr)
set.seed(868)
out<-round(cr[sample(length(cr),5)],4)
print(out)
cr<-corr('specdata',129)
cr<-sort(cr)
n<-length(cr)
set.seed(197)
out<-c(n,round(cr[sample(n,5)],4))
print(out)
cr<-corr('specdata',2000)
n<-length(cr)
cr<-corr('specdata',1000)
cr<-sort(cr)
print(c(n,round(cr,4)))
f<-function(x){g<-function(y){y+z}}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
View(f)
> library(datasets)
> data(iris)
> ?iris
library(datasets)
data(iris)
?iris
iris
head(iris)
vir_data<-sapply(iris$virginica)
vir_data<-sapply(iris$virginica,mean)
vir_data
sapply(iris$virginica,mean)
sapply(iris$Sepal.Length,mean)
tapply(iris$Sepal.Length,mean)
data<-iris[101:150,]
data<-iris$virginica
data
dat<-iris$Sepal.Length
dat
unique_value<-lapply(iris,unique)
unique_value
tapply(iris$virginica)
tapply(iris$Species)
tapply(iris$Sepal.Length)
table(iris$virginica)
table(iris$Species)
table(iris$Sepal.Length)
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
colMeans(iris)
apply(iris,1,mean)
apply(iris[,1:4],1,mean)
rowMeans(iris[,1:4])
library(datasets)
data(mtcars)
?mtcars
mtcars
split(mtcars,mtcars$cyl)
tapply(mtcars$mpg,mtcars$cyl,mean)
tapply(mtcars$cyl,mtcars$mpg,mean)
lapply(mtcars,mean)
apply(mtcars,2,mean)
sapply(mtcars,cyl,mean)
sapply(mtcars,cyl,mean)
with(mtcars,taply(mpg,cyl,mean))
with(mtcars,tapply(mpg,cyl,mean))
mean(mtcars$mpg,mtcars,cyl)
mean(mtcars$mpg,mtcars$cyl)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
debug(ls)
ls
>
undebug(ls)
tapply(mtcars$hp,mtcars$cyl,mean)
library(datasets)
data(mtcars)
tapply(mtcars$hp,mtcars$cyl,mean)
getwd()
setwd("/Users/sayakray/ProgrammingAssignment2")
getwd
getwd()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
my_mean<-makeVector(c(1,2,3,4))
my_mean$get()
my_mean$getmean()
cachemean(my_mean)
cachemean(my_mean)
my_mean$getmean()
my_mean$set(c(2,2,1,4))
my_mean$get()
my_mean$getmean()
cachemean(my_mean)
cachemean(my_mean)
my_mean$getmean()
